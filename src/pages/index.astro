---
import Layout from "../layouts/Layout.astro";

import { db } from "../firebase/client";
import type { IBook } from "../types/book";
import Hero from "../components/Hero.astro";
import { YearsList } from "../components/YearsList";

const ref = db.ref(`books/`);
const snapshot = await ref.once(`value`);
const books =
  ((await Object.values(snapshot.val())) as IBook[]) || ([] as IBook[]);

const years = [
  ...new Set(
    [...books.filter((book) => book?.readIn)].map((book) => String(book.readIn))
  ),
]
  .sort((a, b) => (a > b ? 1 : a < b ? -1 : 0))
  .reverse();

const getBooksByYear = (books: IBook[], years: string[]) => {
  if (books && years) {
    const temp: any[] = [];
    // eslint-disable-next-line array-callback-return
    years?.map((year: string) => {
      let nextBooks = books.filter(
        (book) => String(book.readIn) === String(year)
      );
      temp.push(nextBooks);
    });
    return temp.map((y) =>
      y
        .sort((a: any, b: any) =>
          a.finishedDate > b.finishedDate
            ? 1
            : a.finishedDate < b.finishedDate
              ? -1
              : 0
        )
        .reverse()
    );
  }
  return [];
};

const sorted = getBooksByYear(books, years);

const booksByYear = sorted.map((data, index) => ({
  books: data as IBook[],
  year: Number(years[index]),
}));

const earliestYear = years[years.length - 1];

const variations = ["blue", "green"];

const gradientClass =
  "gradient-base top-0 left-0 " +
  `${variations[Math.floor(Math.random() * variations.length)]}-gradient`;
---

<Layout title="Books I've read">
  <div class={gradientClass}></div>
  <main class='flex flex-col min-h-full pb-[60vh]'>
    <Hero earliestYear={earliestYear} />
    <div class='col-span-8'>
      <YearsList client:only='solid-js' booksByYear={booksByYear} />
    </div>
  </main>
</Layout>

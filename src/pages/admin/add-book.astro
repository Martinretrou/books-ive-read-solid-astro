---
import Layout from "../../layouts/Layout.astro";

import { db, getUser, storage } from "../../firebase/client";
import type { IBook } from "../../types/book";
import { getAuthorsFromBooks } from "../../helpers/book";
import { Select } from "../../components/Select";
import { v4 as uuidv4 } from "uuid";

const user = getUser();

if (!user) {
  return Astro.redirect("/admin/auth");
}

let uploadedCover: any | undefined;

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const cover = data.get("cover") as File;

    const uuid = uuidv4();

    const ref = storage.ref(`/covers/${uuid}`);
    const uploadTask = ref.put(cover);

    uploadTask.on(`state_changed`, console.log, console.error, () => {
      ref.getDownloadURL().then((url) => {
        console.log({ url });
        uploadedCover = url;
        // const promise = db.ref(`books/${uuid}`).set({
        //   ...rest,
        //   image: {
        //     url,
        //     alt: image.alt,
        //   },
        // });
      });
    });
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}

const ref = db.ref(`books/`);
const snapshot = await ref.once(`value`);
const books =
  ((await Object.values(snapshot.val())) as IBook[]) || ([] as IBook[]);

const years = [
  ...new Set(
    [...books.filter((book) => book?.readIn)].map((book) => String(book.readIn))
  ),
]
  .sort((a, b) => (a > b ? 1 : a < b ? -1 : 0))
  .reverse();

const allAuthors = getAuthorsFromBooks(books);
---

<Layout title='Add a book'>
  <main>
    <div class='gradient'></div>
    <div class='absolute top-[8vw] left-[4vw] flex flex-col'>
      <h1 class='text-4xl font-bold'>Add a book</h1>
    </div>
    <div class='pt-[16vw] px-[4vw]'>
      <form
        method='POST'
        class='bg-white border p-[4vw] border-black p gap-[4vw] relative form grid grid-cols-12'
      >
        <div class='col-span-3'>
          {
            uploadedCover ? (
              <img class='h-[450px] w-[300px]' src={uploadedCover} />
            ) : (
              <div class='relative border border-black h-[450px] w-[300px] flex items-center justify-center cursor-pointer'>
                <p>Click here to add book cover</p>
                <input
                  class='absolute w-full h-full bg-red opacity-0'
                  type='file'
                  name='cover'
                  id='cover'
                  required
                />
              </div>
            )
          }
        </div>
        <div class='col-span-9 grid grid-cols-2 gap-4'>
          <label class='flex flex-col mb-6'>
            Title
            <input
              class='border border-black bg-white h-10 mt-2'
              type='text'
              name='title'
              placeholder='Book title here'
              required
            />
          </label>
          <label class='flex flex-col mb-6'>
            Author
            <Select options={allAuthors} />
          </label>
          <label class='flex flex-col mb-6'>
            Read in
            <Select options={allAuthors} />
          </label>
          <label class='flex flex-col mb-6'>
            Finished the
            <Select options={allAuthors} />
          </label>
          <label class='flex flex-col mb-6'>
            Rating for this book
            <Select options={allAuthors} />
          </label>
        </div>
      </form>
    </div>
  </main>
</Layout>

<style>
  .gradient {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    z-index: -10;
    margin: auto;
    padding: 1rem;
    font-size: 20px;
    line-height: 1.6;
    filter: contrast(200%) brightness(1500%);
    background: linear-gradient(0deg, rgb(0, 0, 0), rgba(142, 142, 235, 0)),
      url("data:image/svg+xml,%3Csvg viewBox='0 0 250 250' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='9.37' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
  }
</style>
